################################################################################
#                                                                              #
#  Copyright 2010 Michael Trensch                                              #
#                                                                              #
# Redistribution and use in source and binary forms, with or without           #
# modification, are permitted provided that the following conditions are met:  #
#                                                                              #
# 1. Redistributions of source code must retain the above copyright notice,    #
#    this list of conditions and the following disclaimer.                     #
# 2. Redistributions in binary form must reproduce the above copyright notice, #
#    this list of conditions and the following disclaimer in the documentation #
#    and/or other materials provided with the distribution.                    #
# 3. The name of the author may not be used to endorse or promote products     #
#    derived from this software without specific prior written permission.     #
#                                                                              #
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED #
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF         #
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO   #
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,       #
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, #
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;  #
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,     #
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR      #
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF       #
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                                   #
#                                                                              #
################################################################################
#
#  Description:
#    Initialization script for connecting to NXHX10-ETM Board
#
#  Changes:
#
#    Ver  Date        Author   Description
#    --------------------------------------------------------------------------
#    1    07.09.2010  MT       initial version                            
#                                                                              
################################################################################

tcl_port 6666
telnet_port 4444
gdb_port 3333

#interface
interface ft2232
ft2232_device_desc "NXHX10-ETM A"
ft2232_layout comstick
ft2232_vid_pid 0x0640 0x0028
jtag_khz 6000

#reset_config trst_and_srst|trst_only|srst_only srst_pulls_trst|trst_pulls_srst|combined
reset_config trst_and_srst
jtag_nsrst_delay 500
jtag_ntrst_delay 500

#jtag scan chain
#format L IRC IRCM IDCODE (Length, IR Capture, IR Capture Mask, IDCODE)
jtag newtap netx cpu -irlen 4 -expected-id 0x25966021

target create netx.target0 arm966e -endian little -chain-position netx.cpu -variant arm922t

netx.target0 configure -work-area-virt 0x08000000 -work-area-phys 0x08000000 -work-area-size 0x4000 -work-area-backup 1

proc flash_init { } {
  puts "Configuring SRAM nCS0 for 90ns Par. Flash (x16)"
  mww 0x101C0100 0x01010008

  flash probe 0
}

proc mread32 {addr} {
  set value(0) 0
  mem2array value 32 $addr 1
  return $value(0)
}

proc init_clocks { } {
  puts "Enabling all clocks "
  set accesskey [mread32 0x101c0070]
  mww  0x101c0070 [expr $accesskey]
  
  mww  0x101c0028 0x00007511
}

proc init_sdrambus { } {
  puts "Initializing external SDRAM Bus 16 Bit "
  set accesskey [mread32 0x101c0070]
  mww  0x101c0070 [expr $accesskey]
  mww  0x101c0C48 0x00000050

  puts "Configuring SDRAM controller for K4S561632E (32MB) "
  mww 0x101C0140 0
  sleep 1000
  #mww 0x101C0144 0x00a13262
  mww 0x101C0144 0x00a13251
  mww 0x101C0148 0x00000033
  mww 0x101C0140 0x030d0121 
}

netx.target0 configure -event reset-init {
  halt
  wait_halt 1000

  arm7_9 fast_memory_access enable
  arm7_9 dcc_downloads enable
  
  #for some reason it does not work to call ocd_mem2array from init event,
  #so tell the user he needs to call these functions
  init_clocks
  init_sdrambus

  puts ""
  puts "-------------------------------------------------"
  puts "Call 'init_clocks' to enable all clocks"
  puts "Call 'init_sdrambus' to enable external SDRAM bus"
  puts "-------------------------------------------------"
}

#####################
# Flash configuration
#####################

#flash bank <name> <driver> <base> <size> <chip width> <bus width> <target#>
#flash bank parflash cfi 0xC0000000 0x01000000 2 2 netx.target0

init
reset init
