#Hilscher netX 90 SoC

source [find target/swj-dp.tcl]

# reduce clock speed to 50kHz because the netX PLL is not setup at this time!!!
adapter_khz 50

if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME netx90
}

#
# Main DAP
#
if { [info exists DAP_TAPID] } {
   set _DAP_TAPID $DAP_TAPID
} else {
   set _DAP_TAPID 0x6ba00477
}

swj_newdap $_CHIPNAME dap -expected-id $_DAP_TAPID -irlen 4
if { [using_jtag] } {
  swj_newdap $_CHIPNAME tap -expected-id 0x10a046ad -irlen 4
}

#
# Communication Cortex M4 target
#
set _TARGETNAME_COMM $_CHIPNAME.comm
target create $_TARGETNAME_COMM cortex_m -chain-position $_CHIPNAME.dap -coreid 0 -ap-num 2

$_TARGETNAME_COMM configure -work-area-phys 0x00040000 -work-area-size 0x4000 -work-area-backup 1

#
# Application Cortex M4 target
#
set _TARGETNAME_APP $_CHIPNAME.app
target create $_TARGETNAME_APP cortex_m -chain-position $_CHIPNAME.dap -coreid 0 -ap-num 3 -defer-examine

$_TARGETNAME_APP configure -work-area-phys 0x00040000 -work-area-size 0x4000 -work-area-backup 1

if {![using_hla]} {
   # if srst is not fitted use SYSRESETREQ to
   # perform a soft reset
   cortex_m reset_config sysresetreq
}

#############################################################################
# Enable the APP CPU. Must be executed on the COM CPU.
#############################################################################

proc read_data32 {addr} {
	set value(0) 0
	mem2array value 32 $addr 1
	return $value(0)
}

proc enable_app_cpu {} {
	echo "*** Enable application CPU"
	set accesskey [read_data32 0xff4012c0]
	mww 0xff4012c0 [expr $accesskey]
	mww 0xff401268 0x08000800

	mdw 0xff401268   
}

proc config_analog_ips {} {
	echo "*** Configure analog IPs"

	# apply SystemCalibration0
	mww 0xff001680 0x00000000
	mww 0xff001684 0x00000000

	# configure DCDC 
    mww 0xff0016a8 0x00049f04

    # Configure PLL.
    mww 0xff0016a8 0x00049f04
	
    # Start PLL.
    mww 0xff0016a8 0x00049f05
 
    # Release PLL reset.
    mww 0xff0016a8 0x00049f07
 
    # Disable PLL bypass
    mww 0xff0016a8 0x00049f03
 
    # Switch to 100MHz clock
    mww 0xff0016a8 0x01049f03
 
    # Lock analog parameters
    mww 0xff0016cc 0x00000004
}
